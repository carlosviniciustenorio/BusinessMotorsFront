name: Terraform Plan

on:
  pull_request:
    paths:
      - 'src/**'
      - 'infra/**'
      - '.github/**'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  plan-infra:
    name: 'terraform plan infra' 
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: 'infra'

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.3

      - name: Terraform Init
        id: init
        run: terraform init -backend=true -backend-config="config/dev/backend.hcl"
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plandev
        run: terraform plan -no-color -var-file="config/dev/terraform.tfvars" -lock=false
        # Captura a sa√≠da do terraform plan
        continue-on-error: true

      - name: Post Plan as Comment
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: ${{ steps.plandev.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå
            #### Terraform Initialization ‚öôÔ∏è: success
            #### Terraform Validation ü§ñ: ${{
              steps.validate.outcome === 'success' ? 'Success' : 'Failed'
            }}
            #### Terraform Plan üìñ:
            <details><summary>Show Plan</summary>
            \`\`\`
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.TF_WORKING_DIR }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
